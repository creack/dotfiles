[branch]
    # When creating a new branch off a remote branch, always set it up to
    # track the remote branch so that we can pull from there.
    autosetupmerge = always
    mergeoptions = --no-commit --no-ff

[alias]
    ci = commit -S
    co = checkout
    st = status -sb
    b = branch
    merge = merge --no-ff --no-commit
    lg1 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
    lg2 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
    lg3 = !"git log --show-signature"
    lg = !"git lg1"
    pull = pull --rebase

[color]
    ui = auto
    interactive = true
    branch = true
    diff = true
    status = true

[mergetool.ediff]
    cmd = emacs --eval \"(progn  (defun ediff-write-merge-buffer ()    (let ((file ediff-merge-store-file))      (set-buffer ediff-buffer-C)      (write-region (point-min) (point-max) file)      (message \\\"Merge buffer saved in: %s\\\" file)      (set-buffer-modified-p nil)      (sit-for 1)))  (setq ediff-quit-hook 'kill-emacs        ediff-quit-merge-hook 'ediff-write-merge-buffer)   (ediff-merge-files-with-ancestor \\\"$LOCAL\\\" \\\"$REMOTE\\\"                                   \\\"$BASE\\\" nil \\\"$MERGED\\\"))\"
       trustExitCode = true

[mergetool]
    prompt = false

[merge]
    tool = ediff

[user]
	email = charmes.guillaume@gmail.com
	name = Guillaume J. Charmes
	signingkey = CB6E3FF3
